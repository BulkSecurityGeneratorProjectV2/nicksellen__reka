name reka lab

version 10.2

use {
  http
  admin reka
  mustache
  jade
  store {
    // leveldb admin-store
  }
}

run web interface {

  http/router {
  
    group HTML content with layout {
      
      GET /who {
        put html.main @include(lab/pages/who.md)
      }
      
      GET /how {
        put html.main @include(lab/pages/how.md)
      }
      
      run render layout
    }  
      
    group editor {
    
      GET /apps/new
      
      GET /apps/:appid/edit {
      
        store/get {
            path :appid
            out app
          }
      }
      
      run render editor
    
    }
    
    group running apps {
    
      GET / {
        reka/list
        put html.sidebar @include(lab/running/list/sidebar.md)
        jade html.main   @include(lab/running/list/main.jade)
        run render layout
      }
      
      GET /:id {
      
        reka/get app {
          app :id
        }
        
        then {
          put html.sidebar @include(lab/running/show/sidebar.md)
          jade html.main   @include(lab/running/show/main.jade)
          run render layout
        }
      }
      
      GET /:id/:flow.:format {
      
        reka/visualize {
          app :id
          flow :flow
          format :format
        }
        
      }
      
      GET /:id/:flow {
      
        reka/visualize {
          app :id
          flow :flow
          format svg
          out visualization
        }
        
        reka/get app {
          app :id
        }
        
        put extrastyles @include(lab/visualize-bits-and-bobs.html)
        
        put {
          layout wide
        }
      
        jade html.main <<- jade
        
          != extrastyles
          
          ul.inline-list.flow-list
            each fl in app.flows
              li(id="flow-#{fl}", class=flow==fl ? 'active' : '')
                h3
                  a(href="/#{id}/#{fl}")= fl
          
          .svg-container
            .inner!= visualization
          
        ---  
        
        then render layout
      
      }
    
      DELETE /:id {
        reka/undeploy :id
        http/redirect /
      }
    }
    
    group saved apps {
    
      prefixed /peter {
      
        http/content <<- text/plain
          hello peter
        ---
      
      }
    
      GET /apps {
          
          store/list {
            path /
            field name
            out apps
          }
          
          put no_apps_message <<- markdown
            ### there are no apps :(
            why don't you [add one](/apps/new)?  
          ---
          
          jade html.main   @include(lab/apps.jade)
          put html.sidebar @include(lab/apps.md)
          
          run render layout
          
      }
        
      POST /apps/:appid/deploy {
      
        store/get {
            path :appid
            out app
          }
          
          reka/deploy {
            in app.config
          }
          
          http/redirect /
        
      }
      
      DELETE /apps/:appid {
        store/delete {
          path :appid
        }
        http/redirect /apps
      }
      
      GET /apps/:appid.:format {
      
        store/get {
            path :appid
            out app
          }
          
        reka/visualize {
          format :format
          in app.config
        }
        
      }
      
      group save {
      
        PUT /apps/:appid
        
        POST /apps {
          uuid/generate :appid
        }
        
        then {
          
          store/put {
                in request.data
                path :appid
            }
           
           http/redirect /apps   
        
        }
      
      }
      
    }
    
    group static assets {
      GET /js/ace-mode.js @include(lab/ace-mode-conf.js)
      GET /css/app.css    @include(lab/app.css)
    }
  
  }

}

run render editor {

  put {
    layout editor
  }

  mustache html.main <<- mustache
    <div id="config-editor">{{ app.config }}</div>
  ---

  mustache html.sidebar @include(lab/editor/sidebar.mustache)
  run render layout
}

run render layout {
  put menu     @include(lab/menu-main.reka)
  put utilmenu @include(lab/menu-util.reka)
  jade         @include(lab/layout.jade)
}

run api {
  reka/list response.content
}

trigger {
  @include(lab/triggers.reka)
}