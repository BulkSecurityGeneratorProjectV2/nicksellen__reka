
name a simple websocket app

use {
  http
  websockets ws
}

flow user connected {
  log.debug user :id connected to :host :) :user
  
  put {
    response { "id" : "system", "payload" : { "msg" : "welcome" } }
  }
}

flow user disconnected {
  log.debug user :id disconnected from :host :( :user
}

flow received message {
  log.debug got message :message from :id on :host
  ws/broadcast { "id": ":id", "payload" : :message }
}

flow chat page {

  http/router {
  
    GET / <<- text/html
      <!DOCTYPE html>
      <html lang="en">
          <head>
              <meta charset="utf-8">
              <title>simplechat</title>
              <script src="simplechat.js"></script>
              <style type="text/css">
                * {
                 box-sizing: border-box;   
                }

                html,
                input,
                textarea{
                 font-family: monospace;   
                }

                .message {
                    position: absolute;
                    bottom: 0;
                    left: 0;
                    width: 100%;
                    padding: 20px;
                    box-shadow: 0 0 5px 5px rgba(0,0,0,0.1);
                    background-color: #fff;
                }

                .chat {
                    position: absolute;
                    top: 0;
                    bottom: 80px;
                    left: 0;
                    right: 0;
                    overflow: hidden;
                    padding: 10px 20px;
                    padding-top: 0;
                    outline: none;
                }

                .chat textarea {
                 height: 100%;
                 width: 100%;
                 font-size: 22px;
                 border: none;
                 line-height: 32px;
                 padding-top: 14px;
                 padding-bottom: 14px;
                 outline: none;
                }

                .message input[type=text] {
                 font-size: 22px;  
                 width: 100%;
                 padding: 10px;
                 border: none;
                 outline: none;
                }

                .message input[type=submit] {
                    font-size: 40px;
                    display: none;
                }
              </style>
          </head>
          <body>
              <div class="container">
                <div class="chat">
                  <textarea id="responseText"></textarea>
                </div>
                <div class="message">
                  <form name="inputform">
                    <input type="text" name="message" id="message" autofocus autocomplete="off">
                  </form>
                </div>
              </div>
          </body>
      </html>
        
    ---
  
    GET /simplechat.js <<- text/javascript
      (function() {
          var Sock = function() {
          
              var socket;
              
              var messageInput = document.getElementById('message');
              
              if (!window.WebSocket) {
                  window.WebSocket = window.MozWebSocket;
              }
      
              if (window.WebSocket) {
                  socket = new WebSocket("ws://" + location.host);
                  socket.onopen = onopen;
                  socket.onmessage = onmessage;
                  socket.onclose = onclose;
              } else {
                  alert("Your browser does not support Web Socket.");
              }
      
              function onopen(event) {
                  getTextAreaElement().value = "connection established";
              }
      
              function onmessage(event) {
                  var data = JSON.parse(event.data);
                  if (data.payload && data.payload.msg) {
                    var username = /[a-fA-F0-9]+/.exec(data.id)[0];
                    appendTextArea(username + ' : ' + data.payload.msg);
                  }
              }
              
              function onclose(event) {
                  appendTextArea("connection lost");
              }
      
              function appendTextArea(newData) {
                  var el = getTextAreaElement();
                  el.value = el.value + '\n' + newData;
                  el.scrollTop = el.scrollHeight;
              }
      
              function getTextAreaElement() {
                  return document.getElementById('responseText');
              }
      
              function send(event) {
                  event.preventDefault();
                  if (window.WebSocket) {
                      if (socket.readyState == WebSocket.OPEN) {
                          var payload = { msg: event.target.message.value };
                          socket.send(JSON.stringify(payload));
                      } else {
                          alert("The socket is not open.");
                      }
                  }
                  messageInput.value = '';
                  messageInput.focus();
              }
              document.forms.inputform.addEventListener('submit', send, false);
          }
          window.addEventListener('load', function() { new Sock(); }, false);
      })();   
    
    ---
  }

}

trigger {

  ws localhost:5005 {
  
    on connect {
      run user connected
    }
    
    on disconnect {
      run user disconnected
    }
    
    on message {
      run received message
    }
  
  }
  
  http localhost:5005 {
    run chat page
  }
  
}