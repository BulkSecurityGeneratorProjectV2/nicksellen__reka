use {

	javascript js
	http

	object-store my lovely store {
		innodb /tmp/app.inno
	}

	data-store main data store {
		use my lovely store
		use {
			object-store nested object store {
				leveldb /tmp/app.ldb
			}
			some-other-thing {
				with-other properties
				
				use {
					double nested {
						use es
					}
				}
			}
		}
		commit-tree-store
	}
	
	more-stuff that will use es {
	
		use es
	
	}

	elasticsearch es {
		use my lovely store
		use {
		
			elasticsearch-gateway gw {
				
				s3 credentials
			
			}
		
		}
	}
	
	smtp incoming email {
		calls flush gateway
	}

}

action flush gateway {
	es/gw/flush
	then notify administrator
}

action notify administrator {
	email/send peter@somewhere.com
}

app {

	

	seq a lovely application {

		js {

			run <<- application/javascript
			    var name = "nick";
				if (request.params.name) {

				}

				out.query = {

				}
			---

			out query
		}

		es/query {

			in <<- application/json
			    out = {
					name: "Nick",
					age: 38
				};
            ---

		}

		es/query <<- json
            {
                "query" : {
                    "match_all" : {}
                }
            }
		---

		es/index {
			read {
				name request.params.person.name
				age request.params.age
			}
			in request.data
		}

		db/query <<- sql
			-- lots of people!

			select * from people


			-- but not all of them

			where
			    name = "peter" and
			    score > 2.5 and
			    age > 23 and
			    
			    -- keep out the riff-raff
			    income > 10000

			-- young is best!
			    
			order by age
		---
		
		ruby/run {
			
			code <<- ruby
			
				class Example
					@age = 24
					def boo
						puts "boo is #{@age}"
					end
				end
				
				Example.new.boo
			
			---
			
		}

		clojure/run {

			code <<- clojure

				(defn example [a b c]
					(mapcat #(last %) (blah a b (map c))))

			---
			
		}

	}

}



export {
	http public web application {
		start-at a lovely application
		end-at a lovely application
		host www.mylovelyapp.com
		port 5050
	}
	http public API {
        start-at a lovely application
        end-at a lovely application
        host api.mylovelyapp.com
        port 5055
	}
	http admin interface {
         start-at a lovely application
         end-at a lovely application
         host admin.mylovelyapp.com
         port 9090
	}
	smtp {
		start-at handle email
		account incoming@mylovelyapp.com
	}
}