name nashorn app

use {

  http
  
  nashorn js {
  
    script @include(handlebars.min.js)
    
    // script <<- javascript
      load('http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.3.0/handlebars.min.js');
    ---
    
    var layoutContent <<- hbs
      <!DOCTYPE html>
      <html>
        <head></head>
        <body>
          <ul>
            <li><a href="/">main</a></li>           
            <li><a href="/other">other</a></li>
          </ul>
          {{{ body }}}
        </body>
      </html>
    ---
    
    var indexContent <<- hbs
    
      <h1>title: {{ title }}</h1>
      
      <ul>
        {{#eachkv request.params}}
          <li>
            {{ key }} : {{ value }}
          </li>
        {{/eachkv}}
      </ul>
      
      <ul>
        {{#eachkv things}}
          <li>
            {{ key }} : {{ value }}
          </li>
        {{/eachkv}}
      </ul>
      
    ---
    
    var otherContent <<- hbs
      
      <h2>this is another page</h2>
      
      <ul>
        {{#eachkv things}}
          <li>
            {{ key }} : {{ value }}
          </li>
        {{/eachkv}}
      </ul>
    ---
    
    script <<- javascript
    
      Handlebars.registerHelper('eachkv', function(map, block) {
         var prop, out = '';
         for (prop in map) {
           out += block.fn({ key: prop, value: map[prop] });
         }
         return out;
      });
    
      var layout = Handlebars.compile(layoutContent);
      var index = Handlebars.compile(indexContent);
      var other = Handlebars.compile(otherContent);
      
      
      // don't need this any more
      delete layoutContent;
      delete indexContent; 
      delete otherContent;
      
    ---
    
  }
  
}

run main {

  put {
    title Yay it worked from here too!
    things {
      one cat
      two dogs
      five horse
    }
  }

  http/router {
  
    GET / {
      js out.html = layout({ body: index(data) });
    }
    
    GET /other {
      js out.html = layout({ body: other(data) });
    }
  
  }

  putv response {
    status 200
    content :html
    headers {
      Content-Type text/html
    }
  }

}

trigger {
  http localhost:4010 {
    run main
  }
}
