
name email and websockets

use {
	websockets ws
	smtp
	http
}

flow user connected {
	log.debug user :id connected to :host :) :user
	
	ws/broadcast welcome :id to the chat!
	
	put {
		response welcome!
	}
}

flow user disconnected {
	log.debug user :id disconnected from :host :( :user
}

flow received message {
	log.debug got message :message from :id on :host
	ws/broadcast :id said :message
}


// flow send to all {
	ws/broadcast woah, how cool is this!
}

// flow send message to one user {
	ws/send {
		to :id
		msg hey there!
	}
}

flow new email {
	ws/broadcast :email.subject
}



flow chat page {

	http/router {
	
		GET / <<- text/html

			<!DOCTYPE html>
			<html lang="en">
			    <head>
			        <meta charset="utf-8">
			        <title>Web Socket Example</title>
			        <script src="socket.js"></script>
			        <style type="text/css">
			          textarea {
			              width: 500px;
			              height: 300px;
			          }
			        </style>
			    </head>
			    <body>
			        <h1>Enter a message</h1>
			        <form name="inputform">
			            <input type="text" name="message" id="message" placeholder="Enter text to be sent" autofocus>
			            <input type="submit" value="Send Web Socket Data">
			        </form>
			        <h2>Repsonse from Server</h2>
			        <textarea id="responseText"></textarea>
			    </body>
			</html>
				
		---
	
		GET /socket.js <<- text/javascript
			(function() {
			    var Sock = function() {
			        var socket;
			        if (!window.WebSocket) {
			            window.WebSocket = window.MozWebSocket;
			        }
			
			        if (window.WebSocket) {
			            socket = new WebSocket("ws://localhost:5005/");
			            socket.onopen = onopen;
			            socket.onmessage = onmessage;
			            socket.onclose = onclose;
			        } else {
			            alert("Your browser does not support Web Socket.");
			        }
			
			        function onopen(event) {
			            getTextAreaElement().value = "Web Socket opened!";
			        }
			
			        function onmessage(event) {
			            appendTextArea(event.data);
			        }
			        function onclose(event) {
			            appendTextArea("Web Socket closed");
			        }
			
			        function appendTextArea(newData) {
			            var el = getTextAreaElement();
			            el.value = newData + '\n' + el.value;
			        }
			
			        function getTextAreaElement() {
			            return document.getElementById('responseText');
			        }
			
			        function send(event) {
			            event.preventDefault();
			            if (window.WebSocket) {
			                if (socket.readyState == WebSocket.OPEN) {
			                    socket.send(event.target.message.value);
			                } else {
			                    alert("The socket is not open.");
			                }
			            }
			        }
			        document.forms.inputform.addEventListener('submit', send, false);
			    }
			    window.addEventListener('load', function() { new Sock(); }, false);
			})();		
		
		---
	}

}

trigger {

	smtp 1025 {
		run new email
	}

	ws localhost:5005 {
	
		on connect {
			run user connected
		}
		
		on disconnect {
			run user disconnected
		}
		
		on message {
			run received message
		}
	
	}
	
	http localhost:5005 {
		run chat page
	}
	
}