name something with user login

use {
  http
  jade
  h2 db {
  
    url jdbc:h2:users-v1
    
    create <<- sql
    
      create table if not exists users (
        id bigint auto_increment primary key,
        username varchar(80) not null unique,
        password varchar(80) not null);
        
      create table if not exists sessions (
        uuid varchar(80) primary key);
        
    ---
    
  } 
}

flow main {

  http/router {
  
    group with layout {
    
      GET / {
        jade html.main <<- jade
          h1 this is home
          a(href='/login') go to login page
          a(href='/register') go to register page
          
          h2 your cookies are
          
          ul
            each details, name in request.cookies
              li
                span= name
                pre= details.value
              
        ---
      }
    
      GET /login {
        
        jade html.main <<- jade
          form(action='/login', method='POST')
            input(type='text', name='username')
            input(type='password', name='password')
            button(type='submit') login
        ---
        
      }
      
      GET /register {
        jade html.main <<- jade
          h1 register
          form(action='/register', method='POST')
            input(type='text', name='username')
            input(type='password', name='password')
            input(type='password', name='password_confirmation')
            button(type='submit') register
        ---
      }
    
      POST /login {
            
        db select * from users where username = :request.data.username limit 1
      
        bcrypt/checkpw {
        
          read-pw-from request.data.password
          read-hash-from query.first.password
          
          ok {
          
            uuid/generate response.cookies.rekatoken
            
            jade html.main <<- jade
              p 
                | you logged in as 
                code= request.data.username
                |  with password 
                code= request.data.password
            ---
        
          }
          
          fail {
            
            jade html.main <<- jade
              p authentication failed :(
            ---
            
          }
          
        }
      }
      
      run render layout
    }
    
    POST /register {
    
      bcrypt/hashpw {
        in request.data.password
      }
      
      db insert into users (username, password) values (:request.data.username, :bcrypt.hash)
      
      http/redirect /
      
    }
    
  }
}

flow render layout {
  jade <<- jade
    !!!
    html
      head
      body
        != html.main
  ---
}

trigger {
  
  http localhost:5020 {
    run main
  }
  
}