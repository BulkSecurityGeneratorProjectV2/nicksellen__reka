
name chat

use {
  http
  websockets ws
}

flow welcome {
  ws/send {
    to :id
    message { "id" : "server", "connection-id" : ":id", "data" : { "msg" : "welcome" } }
  }
}

flow disconnect {
  ws/broadcast { "id": "server", disconnected" : ":id" }
}

flow message {
  ws/broadcast { "id": ":id", "data" : :message }
}

flow web {

  http/router {

    GET /simplechat.js @include(simplechat.js)

    GET /normalize.css @include(normalize.min.css)
    GET /main.css @include(main.css)
  
    GET / <<- text/html
      <!DOCTYPE html>
      <html lang="en">
          <head>
              <meta charset="utf-8">
              <title>simplechat</title>
              <link rel="stylesheet" type="text/css" href="/normalize.css">
              <link rel="stylesheet" type="text/css" href="/main.css">
          </head>
          <body>
              <ul id="message-list"></ul>
              <div id="compose">
                <form name="inputform">
                  <span id="current-user" class="user"></span>
                  <input type="text" name="message" id="message" autofocus autocomplete="off">
                </form>
              </div>
              <script src="simplechat.js"></script>
          </body>
      </html>
    ---

  }

}

trigger {

  ws localhost:5020 {
  
    on connect {
      run welcome
    }
    
    on disconnect {
      run disconnect
    }
    
    on message {
      run message
    }
  
  }
  
  http localhost:5020 {
    run web
  }
  
}

