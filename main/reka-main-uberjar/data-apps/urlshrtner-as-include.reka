
name a URL shortening app

use {

  jade
  
  http
  
  h2 db {
    
    url jdbc:h2:urls-v3
    
    create <<- sql

      create table if not exists urls (
        id bigint auto_increment primary key,
        url varchar(2048) unique)

    ---
    
  }
  
  javascript js <<- text/javascript
  
    // http://stackoverflow.com/questions/742013/how-to-code-a-url-shortener
    
    var chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'.split('');
    
    function encode(i) {
      if (i == 0) return chars[0];
        
      var result = '',
          base = chars.length;
        
      while (i > 0) {
        result += chars[(i % base)];
        i = Math.floor(i / base);
      }
        
      return result.split('').reverse().join('');
    }
    
    function decode(input) {
      var i = 0,
          base = chars.length;
        
      input.split('').forEach(function(c){
        i = i * base + chars.indexOf(c);
      });
        
      return i;
    }
    
  ---
}

flow URL shortener {

  http/router {
    
    group assets {
    
      GET /style/main.css <<- text/css
      
body {
font-family: arial;
}

.container {
width: 800px;
margin: 0 auto;
margin-top: 50px;
position: relative;
}

input.url {
font-size: 22px;
width: 100%;
padding: 16px;
background-color: #fff;
cursor: pointer;
}

label {
display: block;
margin-bottom: 15px;
font-style: italic;
}

section {
padding: 25px;
}

section.top {
background-color: #f5f5f5;
}

input, 
button {
border: none;  
cursor: pointer; 
padding: 10px;
font-size: 23px;
}

input.key {
padding: 5px;
}

button.submit {
background-color: #47a447;
color: #fff;
}

input.result {
margin-left: 10px;
width: 490px;
}

button#copy {
 font-size: 12px;   
 padding: 6px;
 color: #fff;
 float: right;
 margin-top: 12px;
 z-index: 10;
}

button#copy:hover {
 background-color: #555;   
}


*, *:after, *:before {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;   
}


.all .from,
.all .arrow,
.all .to {
    float: left;
 padding: 10px;
 font-size: 32px;
}

.all .url {
 width: 100%;
 margin-bottom: 20px;
}

.all .url:after {
 content: '';
 clear: both;
 display: table;
}

.all a {
    text-decoration: none;
    color: #000;
}

.all .from {
 width: 10%;   
}
    
.all .arrow {
 font-size: 90px;
 line-height: 18px;
 color: #ccc;
}

.all .to {
 width: 70%;
 overflow-x: scroll;
 overflow-y: hidden;
 background-color: #f5f5f5;
 float: right;
}

.all .to input {
 width: 100%;   
 background-color: #f5f5f5;
}

      ---
    
    }
    
    group with layout {
    
      group main page {
    
        GET /
        
        GET /-/:key {
          js exports.id = decode(key);
          db select * from urls where id = :id limit 1
        }
        
        run render main page
      
      }
    
      GET /* {
      
        db select * from urls order by id desc
        
        js <<- text/javascript
          for (var i = 0; i < query.entries.length; i++) {
            query.entries[i].key = encode(query.entries[i].id);
          }
          exports.query = query;
        ---
        
        jade html.main <<- jade
          .all
            for url in query.entries
              .url
                .from
                  a(href = '/-/#{url.key}') /#{url.key}
                .arrow &rarr;
                .to
                  input(type='text', readonly=true, value=url.url)
                  
            script(type='text/javascript').
            
              var inputs = document.querySelectorAll('input');
              
              for (var i = 0; i < inputs.length; i++) { 
                inputs[i].onclick = function(e) {
                  e.target.focus();
                  e.target.select();
                }
              }
                  
        ---
        
      }
      
      then {
        run render layout
      }
    
    }
    
    GET /:key {
      js exports.id = decode(key);
      db select url from urls where id = :id limit 1
      http/redirect :query.first.url
    }
    
    POST / {
      db merge into urls (url) key (url) values (:request.data.url)
      db select id from urls where url = :request.data.url
      js exports.key = encode(query.first.id);
      http/redirect /-/:key
    }
    
  }
  
}
  
flow render main page {

  jade html.main <<- jade
    
    url = query.first
      
    form(action='/', method='POST')
      
      section.top 
        input#url.url(placeholder='paste long URL', type='text', name='url', value=url.url, onclick='this.select()')
      
      section.bottom
        button.submit(type='submit') make short URL
        
        if url
          input#result.result(type='text', value='#{something}/#{key}', readonly='readonly')
          
          script(type = 'text/javascript').
            var e = document.getElementById('result');
            function highlight() { e.focus(); e.select(); } 
            e.onclick = highlight;
            highlight();
            
        else
          script(type = 'text/javascript').
            document.getElementById('url').focus();
          
  ---
  
}

run render layout {

  jade <<- jade
    !!!
    html
      head
        title a URL shortener
        link(rel='stylesheet', type='text/css', href='/style/main.css')
      body
        .container
          != html.main

  ---
  
}

trigger {
  http localhost:5026 {
    run URL shortener
  }
}