
app api @include(api.reka)
//app ui @include(ui/main.reka)

app {

	name execute command
	
	exec name-fn <<-
		#!/bin/bash
		echo -n your name is $NAME
	---
	
	test run bash process {
		run {
			name-fn
		}
		case peter {
			input {
				name peter
			}
			expect {
				result.out your name is peter
			}
		}
		case james {
			input {
				name james
			}
			expect {
				result.out your name is james
			}
		}
	}

}

app {
  name hello
  
  adder
  
  // tests run in parallel
  
  test the counter {
  	run {
  		adder/inc
  		adder/sum
  	}
  	
  	// cases run sequentially
  	
  	case one increment {
  		expect {
  			sum 1
  		}
  	}
  	case another increment {
  		expect {
  			sum 2
  		}
  	}
  	case another increment {
  		expect {
  			sum 3
  		}
  	}
  }
  
  test basic things {
  	run {
  	  run boo2
  	}
  	expect {
  	  response {
  		content hello
  	  }
  	}
  }
  
  def boo2 {
  	put:response.content hello
  }
  
  markdown
  
  net/http markdown server {
  	listen localhost:5001
  	on request {
      markdown {
      	in request.params.md
      	out response.content
      }
      put:response.headers.Content-Type text/html
  	}
  }
  net/http {
  
    listen localhost:5000
    on request {
    
      put tags [
      	a nice tag
      	another nice tag
      ]
      put stuff {
      	inside [
  	  	  oh my
  	  	  god it works
  	  	  {
  	  	    would it work?
  	  	    it [
  	  	      sure
  	  	      does
  	  	      {
  	  	        all complexity
  	  	      }
  	  	    ]
  	  	  }
  	  	  [
  	  	    and this
  	  	    too?
  	  	  ]
  	  	]
  	  	tags [
  	  	 special thing
  	  	 something else
  	  	]
  	  }
  	  inspect
      http/router {
        GET / {
          runp boo-yah {
          	println I am printing
          	println I am printing some more
          	sleep 1s
          	context sleeping {
          		println I am printing in the new context!
          		sleep 1s
          	}
          	sleep 1s
          }
          put:response.content hey
        }
      }
    }
  }
  
	def boo {
		http/router {
			group yay {
				GET /
				GET /other
				
				group what is this {
					GET /a
					GET /b
					then {
						put:response.content oh!
					}
				}
				then {
					put:response.content ok!
				}
			}
		}
	}
}



app two {
  name two levels of router
  net/http {
    listen localhost:7000
    on request {
      http/router {
        GET / {
          put:response.content heya
        }
        otherwise {
          run other
        }
      }
    }
  }
  
  def other {
  	http/router {
      GET /yay {
        put:response.content yay
      }
    }
  }

}